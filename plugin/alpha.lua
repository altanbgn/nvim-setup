local alpha = require("alpha")
local dashboard = require("alpha.themes.dashboard")

local header_generator = function(index)
  if index == 1
  then
    return {
      "",
      "⠀⠀⠀⠀⠀⠀⢀⣴⣾⣿⣿⣿⡿⠁⢀⣴⣶⣾⡟⠀⣰⡾⠀⠀⠀⣰⣶⡇⠀⢰⣶⡄⠀⠀⢸⣷⣦⡀⠀⠀⠀⠈⢹⣿⣿⡸⣝⠷⢭⢛",
      "⠀⠀⠀⠀⠀⠰⠋⢸⣿⣿⣿⡟⢀⣴⣿⣿⣿⠏⠀⣴⣿⠃⠀⠀⣰⣿⣿⢁⠀⣾⣿⣿⠀⠀⠈⣿⣿⣿⣆⠀⠀⠀⠀⠻⡿⠀⠈⠀⠉⠉",
      "⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⡟⢠⣾⣿⣿⣿⡏⠀⣸⣿⡏⠀⠀⢈⣿⠿⠣⠾⠄⠿⠿⠿⠇⡄⠀⢸⣿⣿⣿⣧⠀⠀⠈⣆⠀⠀⠀⠀⠀⠀",
      "⠀⠀⠀⠀⠀⠀⣼⣿⣿⠟⠀⣿⣿⣿⣿⡟⠀⢰⣿⡿⠀⠀⢀⣤⠖⠀⣀⣤⡄⢰⣶⣶⡆⣶⡀⠀⢿⣿⣿⣿⣆⠀⠀⢹⣦⠀⠀⠀⠀⠀",
      "⠀⠀⠀⠀⠀⢰⣿⣿⠏⠀⢠⣿⣿⣿⡿⠁⠀⣿⣿⠇⠀⢀⡚⠉⣢⣾⣿⣿⣿⢸⣿⣿⢣⣏⢿⡄⢸⣿⣿⣿⣿⡀⠀⠀⣿⣇⠀⠀⠀⢀",
      "⠀⠀⡀⠀⠀⢼⣿⠃⠀⠀⢸⠿⠿⠛⠁⠀⢸⣿⣏⠃⢠⠟⣱⣾⣿⡿⠟⣫⣾⡆⠿⠟⠘⠉⠙⠛⠈⠛⠛⠟⠛⣃⠀⠀⢹⣿⡆⠀⠀⠀",
      "⠀⠀⠀⠀⠀⣿⠃⠀⠀⠀⠰⠾⠃⠀⠀⠀⣿⡟⠁⠠⢫⣾⣿⣿⣿⡇⣾⣿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⣿⠀⠀⠸⣿⣿⠀⠀⠀",
      "⠀⠀⠀⠀⠀⠇⠀⠀⠀⠀⠠⠆⠀⠀⠀⢀⠋⠀⢀⣴⣿⣿⣿⣿⣿⣿⡏⠁⡠⠄⢀⣤⡄⡴⠄⠰⠎⣡⣦⠻⢿⣿⠀⢂⠀⣿⣿⡇⠀⠀",
      "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣶⡧⢺⣥⣴⣶⣾⣿⣿⣿⣿⠫⠁⡰⡙⡻⠀⠘⠀⢹⣿⣷⠀⠀",
      "⠀⠀⠀⠀⠀⢀⡇⠀⠀⠀⢀⡄⠀⠀⢀⣴⣿⣿⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⢁⣠⣶⣿⡽⡄⠀⠀⠀⢸⣿⣿⡂⠀",
      "⠀⠀⠀⠀⠀⡼⠀⠀⠀⠀⠈⠀⠀⠀⠀⢈⣿⣿⢇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣶⣿⡿⠟⠁⠠⢩⡄⠀⠀⣼⣿⣿⠀⠀",
      "⠀⠀⠀⠀⠠⠃⠀⠀⠀⠀⠀⠀⣠⠄⣀⣬⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢛⣁⣀⣤⣶⣾⡏⡇⠀⢀⣿⣿⣿⠀⠀",
      "⠀⠀⠀⠀⠀⠀⠀⣴⣏⡠⠀⣳⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⣸⣿⣿⡟⢸⠀",
      "⠀⠀⠀⠀⠀⠀⠰⣬⣬⣥⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣤⣀⣀⣀⡁⠀⢠⣿⣿⣿⠃⣼⠀",
      "⠀⠀⠀⠀⠀⠀⠀⠈⡙⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⢛⣛⣛⣛⣛⣛⣻⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠀⢀⣿⣿⣿⠏⣰⡏⠀",
      "⠀⠀⠀⠀⠀⠀⠀⠀⢿⣶⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⠟⡥⠞⠋⠁⠀⠀⠀⠀⢀⣀⡀⣿⣿⣿⣿⣿⣿⣿⣿⠃⢀⣾⣿⣿⠏⣰⠟⠀⠀",
      "⠀⠀⠀⠀⠀⠀⠀⠀⠘⠛⠋⢁⣴⣿⣿⣿⣿⣿⣿⣿⠼⠀⠀⠀⠀⠀⠀⣠⣾⣿⣿⢇⣿⣿⣿⣿⣿⣿⣿⠃⠀⠼⣛⣥⣥⣶⣶⣶⣦⣤",
      "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⣶⣿⡿⢻⣿⣿⣿⣿⣿⣿⣦⡂⠀⣀⣴⣶⣾⣿⡟⢹⡏⣼⣿⣿⣿⣿⣿⣿⠃⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠋⢀⣾⣿⣿⣿⣿⣿⣿⣿⣷⡐⣿⣿⣿⣿⡿⢡⡟⣴⣿⣿⣿⣿⣿⡿⠁⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⠀⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠺⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⢻⣿⣿⣿⠇⡟⣼⣿⣿⣿⣿⣿⡟⠁⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⠀⢹⡟⣶⡀⠀⠀⢠⠀⠀⠀⠀⠀⠈⠛⢿⣿⣿⣿⣿⣿⣿⣿⣌⢿⣿⣿⢸⣸⣿⣿⣿⣿⣿⠟⠀⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⠀⠀⠃⣿⣷⡀⠀⢸⡆⠀⠀⠀⠀⠀⠀⠀⢨⣛⠿⣿⣿⣿⣿⣿⣮⡻⠿⢡⣿⣿⣿⣿⡿⠋⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⠀⠀⠀⠈⣿⣿⣆⡸⣿⡄⠀⠀⠀⠀⠀⠀⠘⣿⣷⣄⠈⠙⠛⠿⢿⣿⣶⣿⣿⣿⠿⢋⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⠀⠀⠀⣠⣿⣿⣿⣷⣌⠻⡄⠀⠀⠀⠀⠀⠀⠹⣿⣿⣷⣄⡀⠀⠀⠀⠈⠉⠋⠁⠀⠀⠀⠀⢀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⠀⠀⠀⠻⣿⣿⣿⣿⣿⣷⣌⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣿⣶⢀⡀⠀⠀⠀⠀⠀⠀⠀⢀⡎⠀⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "",
      "[ res0nance-editor v1.0 ]",
      ""
    }
  elseif index == 2
  then
    return {
      "",
      "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⠀⢀⠀⡰⢃⣿⡿⠁⡼⠃⣰⡟⢁⣼⠟⣰⣿⣾⠿⣿⢾⣿⣿⠟⢷⣶⢶⣶⡄⢻⣿⣿⣷⣷⡻⣯⠙",
      "⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⠀⠐⠁⣼⠃⡾⡟⢀⠞⠁⣼⠋⠀⣾⠟⢠⣿⣻⣞⡿⣷⣿⠟⠎⠀⣸⣞⣻⣿⣿⡀⢹⣷⣻⢾⣷⠌⠂",
      "⣻⣾⣿⣿⣿⣿⣿⣿⣿⣿⡟⠀⠐⠀⣸⠃⢸⣿⠀⡬⠀⣘⠃⠄⣸⡟⠀⣾⣿⣳⣏⣿⡿⠋⠀⢠⠆⣿⣯⢳⣻⣇⢳⠀⣿⣿⣻⣻⡆⠀",
      "⣻⣟⣿⣿⣿⣿⣿⣿⣿⣿⣿⠁⠠⠠⡗⠀⣿⠃⠰⠁⢠⠏⠠⠀⡜⠀⢠⣿⣷⡿⡿⠻⠁⠀⢠⠸⠀⠿⢯⠷⢿⣯⠀⡆⢸⣿⣾⣽⡇⠀",
      "⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⠄⠆⢸⠐⠀⣿⠀⠀⠀⠀⠀⠃⠘⢠⠂⢼⣿⡷⣷⠒⠀⢀⣼⣶⠀⠀⢲⡶⢰⣦⣄⠀⠃⢈⠓⠉⡈⠀⢠",
      "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡂⠇⢨⠐⠀⡧⠀⡃⠀⠀⠀⠀⠀⡟⠀⣿⣿⠟⢁⠄⠠⠞⠻⢿⠂⢰⠘⡇⢸⣽⣎⡅⠀⠨⢄⠂⠁⠀⣧",
      "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡃⢀⠈⠆⠀⢡⢀⠇⠀⠀⠀⠀⢰⡇⢀⣿⠏⢀⡜⢀⡄⠀⠀⠈⠀⠚⠀⠁⡞⣿⣯⠁⠀⢢⠘⠀⠀⡆⢿",
      "⣿⣿⣿⣿⡿⠟⠻⠿⠿⠿⠟⠇⠈⠀⠀⠀⡀⠸⣆⠠⢆⣀⢠⣿⣿⠀⠃⣰⡟⣴⣿⠀⠀⠀⠀⠀⠀⣀⠀⢸⣿⡗⠀⠀⢂⠠⢀⣾⡇⣺",
      "⣿⣿⣿⡏⠀⢠⣀⣀⡐⢀⠂⠀⠄⠀⠐⠀⠳⠈⣿⣶⣤⣾⣿⣿⡗⢀⣾⣿⣿⣿⣿⠀⣠⠀⡀⠀⣠⠏⢠⣿⣟⠃⠀⡐⠂⣠⠟⣿⡇⢸",
      "⣿⣿⡟⠀⠄⣼⡟⠻⠛⠫⠼⢿⣶⣶⣦⣤⣄⣁⡘⠛⠛⠛⠛⠿⠷⣿⣿⣿⣿⣿⣿⣦⣀⣉⣡⣾⠏⢀⣾⡿⠂⡄⠀⣠⣾⣿⡆⢻⣯⠀",
      "⢻⣿⠁⠘⢠⣿⠀⢰⣶⣶⣤⣾⡷⠀⣼⣿⣿⣿⡟⠙⢿⡟⠳⢶⣦⣤⣤⣈⣉⣉⣋⠉⠛⠙⠏⠁⢠⣾⡟⢁⡔⠀⢠⣿⣏⣷⡳⠘⣿⡀",
      "⢾⣿⠀⠂⣼⣿⣄⠀⠙⢿⣯⢾⡇⠠⣿⣿⣿⣿⡇⠀⢶⡇⢀⣾⣿⣾⣷⠈⢙⠈⠛⠛⠻⠟⢶⣶⣦⣤⠀⢀⠠⠀⠸⣿⣏⡷⣿⡀⢿⡷",
      "⡉⠋⠀⢠⣿⣿⣿⣿⣤⡀⠙⡿⠀⢠⣉⣉⡉⠙⠀⢸⢧⠀⢸⣿⣿⣿⡿⠀⣾⣿⣶⡆⠀⣤⣤⣴⣿⡟⠀⠨⢜⡀⠀⣿⣯⣟⣿⡇⠈⢿",
      "⠀⡀⠈⢸⣏⡈⠛⠛⠛⠀⡀⠇⠀⣾⣿⣿⣿⡟⠀⡎⡎⠀⣾⣿⣿⣿⠇⠀⣿⣷⢻⠀⢠⣿⣿⣿⣿⠇⠀⠉⡆⠄⠀⢻⣿⢾⣽⣷⠀⠈",
      "⠀⣶⡚⢽⣿⣿⣷⣶⣶⣿⣿⣤⣤⣿⣿⣿⣿⡃⠀⣧⣧⠀⠻⣿⣿⡝⠀⢸⣿⣯⡹⠀⣼⣿⣿⣿⡿⠀⠨⠄⠘⡥⠀⠘⣿⣯⣟⣻⡄⠀",
      "⠀⢿⢇⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣤⣤⣀⣤⣴⣿⣿⣿⠇⠀⣿⣿⣯⢰⣆⠀⠘⡰⠈⡔⢣⠀⢹⣿⣼⣳⣧⠠",
      "⠀⢀⣾⣿⣿⣿⣿⣿⣿⣿⣿⡏⠉⣹⣿⣿⣿⠿⠿⣿⠾⣿⣿⣽⣿⣿⣿⣿⣿⣿⣷⣶⣾⣿⣇⠀⣶⣾⡄⠱⡀⢘⢂⠆⠀⢻⣶⣻⣷⡈",
      "⠀⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⠁⢠⣿⣿⣿⡿⠀⢰⣽⠀⢀⣀⠉⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠀⢉⣤⣦⠀⢡⠀⢎⠘⠤⠀⢻⣿⣷⣷",
      "⡄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⣸⣿⣿⣿⡇⠀⣼⡏⠀⣼⡿⢢⠀⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⢸⣿⣻⠀⠌⡄⠘⢀⢆⢂⠈⢻⣿⣟",
      "⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⠀⣿⣿⣿⣿⠇⢠⣿⠃⠐⠛⠃⠂⢀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠐⣧⣿⠀⠘⡄⢈⠀⢎⡰⢀⠀⠻⣿",
      "⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡀⠙⠿⠿⠟⠀⣼⡞⠀⢸⣶⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢀⡀⠻⠾⠀⠰⠐⠀⠀⣎⠰⠀⡀⠀⠙",
      "⠉⠉⡙⢛⠛⠻⠿⠿⣿⣿⣿⣿⣷⣶⣶⣶⣿⣿⣇⣀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠈⠓⣀⢄⠲⣐⠆⠀⡸⢀⢣⠀⢸⠀⠀",
      "⣴⣦⣤⣤⡍⣁⡐⠂⠠⠠⠉⢉⡙⠛⠛⠻⠿⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠲⢍⠲⣌⡱⢌⠂⢠⡑⢌⢢⠀⢸⡇⠀",
      "⣿⣿⣿⡿⠿⡿⢶⠋⠑⠶⠶⠆⠠⠀⢐⠒⠀⠄⠐⢀⠠⡌⢉⡛⢛⠛⠿⠿⠿⣿⣿⣿⣿⡏⠠⠤⠤⡌⢆⠱⠉⠀⠆⡜⠤⣊⠄⣹⣇⠀",
      ""
    }
  elseif index == 3
  then
    return {
      "",
      "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⣵⣛⣩⠍⠉⣛⣒⣈⠃⠉⢙⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠵⠚⣫⣥⣶⣿⣿⣿⣿⣿⣿⣿⣾⡿⢶⣎⢙⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠃⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣮⡃⢿⣦⣙⢿⣿⣿⣿⣿⣿⣿⣿⣿⣇⣿⣿⣿⣿",
      "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠀⢠⣿⣿⣿⣿⠟⣫⣿⣿⣿⣿⡿⣿⣿⣿⣿⣿⣿⣿⡎⣛⢿⣷⣝⢿⣿⣿⣿⣯⣽⣽⢬⣛⣿⣿⣿",
      "⣯⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⣠⣇⣿⣿⠿⢟⣥⣾⣿⣿⣿⣿⠋⢴⣿⣿⣿⢟⠁⣾⣿⡇⣿⣦⢻⣿⣆⢻⣿⣿⣿⣿⣯⣿⣿⣿⣿⣿",
      "⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⠋⢠⣿⣿⠟⢁⣴⣿⣿⣿⣿⢋⣿⣿⢠⣿⣿⡿⢣⣾⢠⣿⣿⠇⠹⣿⣇⢻⣿⣧⡹⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣿⣿⣿⣿⣿⣿⣿⣿⠟⠁⡆⣾⢟⡵⣣⣿⣿⣿⣿⡿⣡⣾⠟⠡⢿⣿⠏⣴⣿⢃⣾⣿⣿⠀⣤⢹⣿⡼⣿⣟⣷⠹⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣿⣿⣿⣿⣿⣿⡿⢫⠎⣼⣿⡏⡾⡁⢹⣿⣿⡿⢋⢾⡿⢋⢠⣿⢟⣤⣦⡽⣡⢿⣿⣿⢇⢀⢹⡞⣿⡇⣿⣯⢿⡁⢻⣿⣿⢻⣿⣿⣿⣿",
      "⣿⣿⣿⣿⣿⡟⡰⠃⣼⢿⣿⠃⢱⡇⠻⠿⣋⡴⠏⢀⣴⡏⣊⣵⣿⡿⠟⠑⢡⣿⣿⠟⣼⠨⣿⡇⣿⣿⣿⣿⣿⣇⠘⣿⣿⡏⣿⣿⣿⣿",
      "⣿⣿⣿⣿⠏⢀⡼⣸⢃⣿⡇⡀⠈⠠⡀⠈⣉⡄⠂⠉⠉⠈⠙⠛⠛⠟⣠⣆⣾⡿⠃⣼⠇⢡⣭⡓⢹⢻⣿⣿⣿⣿⢠⠹⡿⠿⢸⢿⣿⣿",
      "⣿⣿⣿⡟⣰⣿⢣⢋⣾⣿⢰⠃⣠⡆⢀⣌⣩⠀⣸⣧⣬⣥⣤⣐⠲⣄⣋⣘⣥⢆⣼⢟⣴⣿⣿⣿⠀⠸⣿⣿⣿⢻⡜⡆⣷⣶⢸⣿⣿⣿",
      "⣿⣿⠛⢡⣿⢣⢏⣾⠿⣛⡉⣼⢻⡇⠘⣿⣿⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠛⠿⢿⣟⣆⠀⢹⣿⣿⠀⢷⢻⢽⣿⣿⣿⣿⣿",
      "⣿⣿⣿⠸⠃⠋⢈⣵⢟⠉⣼⢏⡾⠀⠀⣬⢻⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣤⡀⠀⢠⡀⠛⢰⣿⢿⣿⡆⢈⠊⢸⣿⣿⣿⣿⣿",
      "⣿⣿⠟⠀⣴⠇⣾⠣⢏⣾⢏⡾⠁⠀⠀⢡⡜⢷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣬⣵⢂⣾⣿⣸⢹⡇⢸⣆⠘⣿⣿⣿⣿⣿",
      "⣿⠏⣀⠈⠏⢸⣿⣀⣿⠋⣾⠣⠃⠀⠀⠀⢻⣦⠙⢿⣿⣿⠀⠈⠉⠉⠛⠟⢿⣿⣿⣿⣿⣿⡿⢁⠞⣿⢃⠏⢾⡇⣼⣿⣿⣾⣿⣿⣿⣿",
      "⢣⣾⣿⠆⢠⣿⣿⠿⢿⣿⣿⡀⠠⠀⠀⠀⠀⠻⣦⡈⣻⣿⡞⣿⣦⣤⡀⠀⣠⣿⣿⣿⣿⡏⠀⣠⢸⡏⠈⢀⠈⡇⠿⠿⠿⣿⣻⣿⣿⣟",
      "⣿⡿⢣⠆⣾⣿⣿⡧⣷⣮⣭⠁⠀⣀⣴⠖⠀⠀⡈⠻⣿⣿⣿⣞⣿⣟⣫⣴⣿⣿⣿⣿⠏⠀⣸⡟⠈⣠⣤⡌⠀⣇⢾⣿⣿⣿⣿⣿⣿⣿",
      "⠻⢠⡏⣰⣿⣿⣿⣷⣿⣿⣿⣷⠾⠋⠁⠀⠀⠀⣿⣦⡀⠙⠻⣿⣿⣿⣿⣿⠿⠟⠋⠀⠀⠀⡟⣼⣧⣿⣿⣿⡇⣿⢸⣿⣿⡿⠿⠿⠿⢿",
      "⣷⣤⢀⣿⣿⣿⠛⢿⠿⠿⠟⢡⣾⡄⠀⠀⠀⢠⣿⣿⣿⣦⡀⠀⠉⠋⢉⠀⣴⣶⣶⢌⠢⢃⡁⢿⣿⣿⣿⣿⠃⣋⣀⣀⣀⣚⡻⣿⣿⣿",
      "⣿⡏⣸⣿⣿⣿⣿⠆⠐⣿⡇⢸⣿⠀⠀⠀⣠⣿⣿⣿⣿⣿⣿⣶⣶⣶⣶⡆⠟⣫⣶⣿⣷⡘⣿⡜⠻⢿⢩⣴⣿⣿⣇⢿⣏⢿⣿⡜⢿⣿",
      "⣭⠁⠿⡻⢿⣿⣿⠀⠀⠻⣷⡀⣙⡀⠠⡸⠿⢿⣿⣟⣛⣛⣛⣛⣛⣻⣿⣡⣾⣿⣿⣿⣿⣷⣮⣍⣀⠠⠉⢻⣿⣿⣿⡘⡏⣾⣿⣧⢤⡝",
      "⣵⣾⣿⣿⣷⣮⡙⠀⣴⣶⣎⠱⠹⣿⣷⣝⠈⠛⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⣡⠴⣛⣀⠙⢿⣿⣷⢠⣿⣿⣿⣿⢣",
      "⣿⣿⣿⣿⣿⣿⣿⢠⣿⣿⣿⡇⠇⣿⣿⣿⣷⡀⢹⠸⠿⠛⣛⣛⣛⣛⣛⡷⠙⠛⣿⣿⣿⠟⣡⠚⣱⣾⣿⣿⣿⣶⣬⣉⢸⣿⣿⣿⢃⣾",
      "⣛⣻⣭⣭⣭⣛⢿⠀⣿⣿⣋⣤⣾⣷⢸⣿⣿⣷⡜⣵⡾⢛⣫⣭⣭⣭⣭⣝⣛⡳⠦⠶⠶⠛⢡⣾⣿⣿⣿⣿⣿⣿⣿⣿⠇⠹⢿⠃⣿⣿",
      "⣿⣿⣿⣿⣿⣿⣷⡀⣎⠻⣿⣿⣿⣿⡎⢫⣿⣿⡇⠉⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣤⣀⣳⣼⣿⣿⣿⣿⣿⡿⠟⠋⠀⠀⠀⢢⡄⣿⣿",
      ""
    }
  end
end

local function styled_button(sc, txt, keybind, keybind_opts)
  local d_button = dashboard.button(sc, txt, keybind, keybind_opts)
  d_button.opts.hl = "ModeMsg"
  d_button.opts.hl_shortcut = "ErrorMsg"
  return d_button
end

local function randomize_header()
  math.randomseed(os.time())
  local index = math.random(1, 3)
  return header_generator(index)
end

local buttons = {
  styled_button("SPC f n", " New File"),
  styled_button("SPC f e", " File Explorer"),
  styled_button("SPC f f", "󰱽 Find Files"),
  styled_button("SPC f g", " Live Grep"),
  styled_button("SPC f r", " Recent Files"),
  styled_button("SPC f p", "󰒓 Configuration", ":e ~/.config/nvim/lua/res0nance/packer.lua<CR>"),
  styled_button("U", " Update Packages", ":PackerSync<CR>"),
  styled_button("q", " Quit", ":q!<CR>")
}

dashboard.section.buttons.val = buttons
dashboard.section.header.val = randomize_header()
dashboard.section.header.opts.hl = "Label"

alpha.setup(dashboard.opts)

vim.keymap.set("n", "<leader>db", "<cmd>AlphaRedraw<CR>")

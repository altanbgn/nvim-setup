vim.keymap.set("n", "<leader>db", "<cmd>Dashboard<CR>")

local dashboard = require("dashboard")
local header_generator = function(index)
  if index == 1
  then
    return {
      "",
      "⠀⠀⠀⠀⠀⠀⢀⣴⣾⣿⣿⣿⡿⠁⢀⣴⣶⣾⡟⠀⣰⡾⠀⠀⠀⣰⣶⡇⠀⢰⣶⡄⠀⠀⢸⣷⣦⡀⠀⠀⠀⠈⢹⣿⣿⡸⣝⠷⢭⢛",
      "⠀⠀⠀⠀⠀⠰⠋⢸⣿⣿⣿⡟⢀⣴⣿⣿⣿⠏⠀⣴⣿⠃⠀⠀⣰⣿⣿⢁⠀⣾⣿⣿⠀⠀⠈⣿⣿⣿⣆⠀⠀⠀⠀⠻⡿⠀⠈⠀⠉⠉",
      "⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⡟⢠⣾⣿⣿⣿⡏⠀⣸⣿⡏⠀⠀⢈⣿⠿⠣⠾⠄⠿⠿⠿⠇⡄⠀⢸⣿⣿⣿⣧⠀⠀⠈⣆⠀⠀⠀⠀⠀⠀",
      "⠀⠀⠀⠀⠀⠀⣼⣿⣿⠟⠀⣿⣿⣿⣿⡟⠀⢰⣿⡿⠀⠀⢀⣤⠖⠀⣀⣤⡄⢰⣶⣶⡆⣶⡀⠀⢿⣿⣿⣿⣆⠀⠀⢹⣦⠀⠀⠀⠀⠀",
      "⠀⠀⠀⠀⠀⢰⣿⣿⠏⠀⢠⣿⣿⣿⡿⠁⠀⣿⣿⠇⠀⢀⡚⠉⣢⣾⣿⣿⣿⢸⣿⣿⢣⣏⢿⡄⢸⣿⣿⣿⣿⡀⠀⠀⣿⣇⠀⠀⠀⢀",
      "⠀⠀⡀⠀⠀⢼⣿⠃⠀⠀⢸⠿⠿⠛⠁⠀⢸⣿⣏⠃⢠⠟⣱⣾⣿⡿⠟⣫⣾⡆⠿⠟⠘⠉⠙⠛⠈⠛⠛⠟⠛⣃⠀⠀⢹⣿⡆⠀⠀⠀",
      "⠀⠀⠀⠀⠀⣿⠃⠀⠀⠀⠰⠾⠃⠀⠀⠀⣿⡟⠁⠠⢫⣾⣿⣿⣿⡇⣾⣿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⣿⠀⠀⠸⣿⣿⠀⠀⠀",
      "⠀⠀⠀⠀⠀⠇⠀⠀⠀⠀⠠⠆⠀⠀⠀⢀⠋⠀⢀⣴⣿⣿⣿⣿⣿⣿⡏⠁⡠⠄⢀⣤⡄⡴⠄⠰⠎⣡⣦⠻⢿⣿⠀⢂⠀⣿⣿⡇⠀⠀",
      "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣶⡧⢺⣥⣴⣶⣾⣿⣿⣿⣿⠫⠁⡰⡙⡻⠀⠘⠀⢹⣿⣷⠀⠀",
      "⠀⠀⠀⠀⠀⢀⡇⠀⠀⠀⢀⡄⠀⠀⢀⣴⣿⣿⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⢁⣠⣶⣿⡽⡄⠀⠀⠀⢸⣿⣿⡂⠀",
      "⠀⠀⠀⠀⠀⡼⠀⠀⠀⠀⠈⠀⠀⠀⠀⢈⣿⣿⢇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣶⣿⡿⠟⠁⠠⢩⡄⠀⠀⣼⣿⣿⠀⠀",
      "⠀⠀⠀⠀⠠⠃⠀⠀⠀⠀⠀⠀⣠⠄⣀⣬⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢛⣁⣀⣤⣶⣾⡏⡇⠀⢀⣿⣿⣿⠀⠀",
      "⠀⠀⠀⠀⠀⠀⠀⣴⣏⡠⠀⣳⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⣸⣿⣿⡟⢸⠀",
      "⠀⠀⠀⠀⠀⠀⠰⣬⣬⣥⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣤⣀⣀⣀⡁⠀⢠⣿⣿⣿⠃⣼⠀",
      "⠀⠀⠀⠀⠀⠀⠀⠈⡙⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⢛⣛⣛⣛⣛⣛⣻⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠀⢀⣿⣿⣿⠏⣰⡏⠀",
      "⠀⠀⠀⠀⠀⠀⠀⠀⢿⣶⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⠟⡥⠞⠋⠁⠀⠀⠀⠀⢀⣀⡀⣿⣿⣿⣿⣿⣿⣿⣿⠃⢀⣾⣿⣿⠏⣰⠟⠀⠀",
      "⠀⠀⠀⠀⠀⠀⠀⠀⠘⠛⠋⢁⣴⣿⣿⣿⣿⣿⣿⣿⠼⠀⠀⠀⠀⠀⠀⣠⣾⣿⣿⢇⣿⣿⣿⣿⣿⣿⣿⠃⠀⠼⣛⣥⣥⣶⣶⣶⣦⣤",
      "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⣶⣿⡿⢻⣿⣿⣿⣿⣿⣿⣦⡂⠀⣀⣴⣶⣾⣿⡟⢹⡏⣼⣿⣿⣿⣿⣿⣿⠃⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠋⢀⣾⣿⣿⣿⣿⣿⣿⣿⣷⡐⣿⣿⣿⣿⡿⢡⡟⣴⣿⣿⣿⣿⣿⡿⠁⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⠀⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠺⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⢻⣿⣿⣿⠇⡟⣼⣿⣿⣿⣿⣿⡟⠁⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⠀⢹⡟⣶⡀⠀⠀⢠⠀⠀⠀⠀⠀⠈⠛⢿⣿⣿⣿⣿⣿⣿⣿⣌⢿⣿⣿⢸⣸⣿⣿⣿⣿⣿⠟⠀⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⠀⠀⠃⣿⣷⡀⠀⢸⡆⠀⠀⠀⠀⠀⠀⠀⢨⣛⠿⣿⣿⣿⣿⣿⣮⡻⠿⢡⣿⣿⣿⣿⡿⠋⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⠀⠀⠀⠈⣿⣿⣆⡸⣿⡄⠀⠀⠀⠀⠀⠀⠘⣿⣷⣄⠈⠙⠛⠿⢿⣿⣶⣿⣿⣿⠿⢋⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⠀⠀⠀⣠⣿⣿⣿⣷⣌⠻⡄⠀⠀⠀⠀⠀⠀⠹⣿⣿⣷⣄⡀⠀⠀⠀⠈⠉⠋⠁⠀⠀⠀⠀⢀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⠀⠀⠀⠻⣿⣿⣿⣿⣿⣷⣌⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣿⣶⢀⡀⠀⠀⠀⠀⠀⠀⠀⢀⡎⠀⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      ""
    }
  elseif index == 2
  then
    return {
      "",
      "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⠀⢀⠀⡰⢃⣿⡿⠁⡼⠃⣰⡟⢁⣼⠟⣰⣿⣾⠿⣿⢾⣿⣿⠟⢷⣶⢶⣶⡄⢻⣿⣿⣷⣷⡻⣯⠙",
      "⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⠀⠐⠁⣼⠃⡾⡟⢀⠞⠁⣼⠋⠀⣾⠟⢠⣿⣻⣞⡿⣷⣿⠟⠎⠀⣸⣞⣻⣿⣿⡀⢹⣷⣻⢾⣷⠌⠂",
      "⣻⣾⣿⣿⣿⣿⣿⣿⣿⣿⡟⠀⠐⠀⣸⠃⢸⣿⠀⡬⠀⣘⠃⠄⣸⡟⠀⣾⣿⣳⣏⣿⡿⠋⠀⢠⠆⣿⣯⢳⣻⣇⢳⠀⣿⣿⣻⣻⡆⠀",
      "⣻⣟⣿⣿⣿⣿⣿⣿⣿⣿⣿⠁⠠⠠⡗⠀⣿⠃⠰⠁⢠⠏⠠⠀⡜⠀⢠⣿⣷⡿⡿⠻⠁⠀⢠⠸⠀⠿⢯⠷⢿⣯⠀⡆⢸⣿⣾⣽⡇⠀",
      "⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⠄⠆⢸⠐⠀⣿⠀⠀⠀⠀⠀⠃⠘⢠⠂⢼⣿⡷⣷⠒⠀⢀⣼⣶⠀⠀⢲⡶⢰⣦⣄⠀⠃⢈⠓⠉⡈⠀⢠",
      "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡂⠇⢨⠐⠀⡧⠀⡃⠀⠀⠀⠀⠀⡟⠀⣿⣿⠟⢁⠄⠠⠞⠻⢿⠂⢰⠘⡇⢸⣽⣎⡅⠀⠨⢄⠂⠁⠀⣧",
      "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡃⢀⠈⠆⠀⢡⢀⠇⠀⠀⠀⠀⢰⡇⢀⣿⠏⢀⡜⢀⡄⠀⠀⠈⠀⠚⠀⠁⡞⣿⣯⠁⠀⢢⠘⠀⠀⡆⢿",
      "⣿⣿⣿⣿⡿⠟⠻⠿⠿⠿⠟⠇⠈⠀⠀⠀⡀⠸⣆⠠⢆⣀⢠⣿⣿⠀⠃⣰⡟⣴⣿⠀⠀⠀⠀⠀⠀⣀⠀⢸⣿⡗⠀⠀⢂⠠⢀⣾⡇⣺",
      "⣿⣿⣿⡏⠀⢠⣀⣀⡐⢀⠂⠀⠄⠀⠐⠀⠳⠈⣿⣶⣤⣾⣿⣿⡗⢀⣾⣿⣿⣿⣿⠀⣠⠀⡀⠀⣠⠏⢠⣿⣟⠃⠀⡐⠂⣠⠟⣿⡇⢸",
      "⣿⣿⡟⠀⠄⣼⡟⠻⠛⠫⠼⢿⣶⣶⣦⣤⣄⣁⡘⠛⠛⠛⠛⠿⠷⣿⣿⣿⣿⣿⣿⣦⣀⣉⣡⣾⠏⢀⣾⡿⠂⡄⠀⣠⣾⣿⡆⢻⣯⠀",
      "⢻⣿⠁⠘⢠⣿⠀⢰⣶⣶⣤⣾⡷⠀⣼⣿⣿⣿⡟⠙⢿⡟⠳⢶⣦⣤⣤⣈⣉⣉⣋⠉⠛⠙⠏⠁⢠⣾⡟⢁⡔⠀⢠⣿⣏⣷⡳⠘⣿⡀",
      "⢾⣿⠀⠂⣼⣿⣄⠀⠙⢿⣯⢾⡇⠠⣿⣿⣿⣿⡇⠀⢶⡇⢀⣾⣿⣾⣷⠈⢙⠈⠛⠛⠻⠟⢶⣶⣦⣤⠀⢀⠠⠀⠸⣿⣏⡷⣿⡀⢿⡷",
      "⡉⠋⠀⢠⣿⣿⣿⣿⣤⡀⠙⡿⠀⢠⣉⣉⡉⠙⠀⢸⢧⠀⢸⣿⣿⣿⡿⠀⣾⣿⣶⡆⠀⣤⣤⣴⣿⡟⠀⠨⢜⡀⠀⣿⣯⣟⣿⡇⠈⢿",
      "⠀⡀⠈⢸⣏⡈⠛⠛⠛⠀⡀⠇⠀⣾⣿⣿⣿⡟⠀⡎⡎⠀⣾⣿⣿⣿⠇⠀⣿⣷⢻⠀⢠⣿⣿⣿⣿⠇⠀⠉⡆⠄⠀⢻⣿⢾⣽⣷⠀⠈",
      "⠀⣶⡚⢽⣿⣿⣷⣶⣶⣿⣿⣤⣤⣿⣿⣿⣿⡃⠀⣧⣧⠀⠻⣿⣿⡝⠀⢸⣿⣯⡹⠀⣼⣿⣿⣿⡿⠀⠨⠄⠘⡥⠀⠘⣿⣯⣟⣻⡄⠀",
      "⠀⢿⢇⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣤⣤⣀⣤⣴⣿⣿⣿⠇⠀⣿⣿⣯⢰⣆⠀⠘⡰⠈⡔⢣⠀⢹⣿⣼⣳⣧⠠",
      "⠀⢀⣾⣿⣿⣿⣿⣿⣿⣿⣿⡏⠉⣹⣿⣿⣿⠿⠿⣿⠾⣿⣿⣽⣿⣿⣿⣿⣿⣿⣷⣶⣾⣿⣇⠀⣶⣾⡄⠱⡀⢘⢂⠆⠀⢻⣶⣻⣷⡈",
      "⠀⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⠁⢠⣿⣿⣿⡿⠀⢰⣽⠀⢀⣀⠉⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠀⢉⣤⣦⠀⢡⠀⢎⠘⠤⠀⢻⣿⣷⣷",
      "⡄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⣸⣿⣿⣿⡇⠀⣼⡏⠀⣼⡿⢢⠀⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⢸⣿⣻⠀⠌⡄⠘⢀⢆⢂⠈⢻⣿⣟",
      "⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⠀⣿⣿⣿⣿⠇⢠⣿⠃⠐⠛⠃⠂⢀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠐⣧⣿⠀⠘⡄⢈⠀⢎⡰⢀⠀⠻⣿",
      "⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡀⠙⠿⠿⠟⠀⣼⡞⠀⢸⣶⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢀⡀⠻⠾⠀⠰⠐⠀⠀⣎⠰⠀⡀⠀⠙",
      "⠉⠉⡙⢛⠛⠻⠿⠿⣿⣿⣿⣿⣷⣶⣶⣶⣿⣿⣇⣀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠈⠓⣀⢄⠲⣐⠆⠀⡸⢀⢣⠀⢸⠀⠀",
      "⣴⣦⣤⣤⡍⣁⡐⠂⠠⠠⠉⢉⡙⠛⠛⠻⠿⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠲⢍⠲⣌⡱⢌⠂⢠⡑⢌⢢⠀⢸⡇⠀",
      "⣿⣿⣿⡿⠿⡿⢶⠋⠑⠶⠶⠆⠠⠀⢐⠒⠀⠄⠐⢀⠠⡌⢉⡛⢛⠛⠿⠿⠿⣿⣿⣿⣿⡏⠠⠤⠤⡌⢆⠱⠉⠀⠆⡜⠤⣊⠄⣹⣇⠀",
      ""
    }
  elseif index == 3
  then
    return {
      "",
      "",
      "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ",
      "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣼⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣬⣭⣛⡛⠛⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⠿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠈⠉⠉⠙⠒⠬⡠⡄⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⢠⣂⠀⢲⢸⣿⣶⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣶⣦⣤⣞⣿⣧⡠⣿⣿⣿⣿⣷⣶⣦⣧⣄⠀⣸⠀⠀",
      "⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢟⠍⠩⠭⡻⣄⠀",
      "⠀⠀⠀⠀⠀⠀⠀⢰⡼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠈⠃",
      "⠀⠀⠀⠀⠀⠀⢰⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣦⣄⢠⣦⡀⠀⠀",
      "⠀⠀⠀⠀⠀⠀⢸⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣸⣿⣿⣷⣍⠀⠀⠀",
      "⠀⠀⠀⠀⠀⠀⢸⢸⣿⣿⣿⣿⣿⣭⡛⠿⢿⣿⣿⣿⣿⣷⣿⣿⣿⣿⠇⠀⠀⠀",
      "⠀⠀⠀⠀⠀⠀⢸⢸⣿⣿⣿⣿⣿⣿⣿⣷⣽⣳⢮⣻⣿⣿⣿⣿⡿⡵⠁⠀⠀⠀",
      "⠀⠀⠀⠀⠀⠀⢸⢀⡹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡷⠁⠀⠀⠀⠀",
      "⠀⠀⠀⠀⠀⠀⠸⢸⣷⡄⠙⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⠋⠰⠀⠀⠀⠀⠀",
      "",
      "",
    }
  elseif index == 4
  then
    return {
      "",
      "⣿⣿⣿⣿⣿⣿⣿⣿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣿⣿⣿⣿⣿⣿⣿⠃⠀⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣿⣿⣿⣿⣿⣿⠇⠀⠀⠈⠛⠋⠙⠿⠟⠉⢉⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⡟⠻⢿⣿⠃⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣧⠀⠀⠀⠀⠀⠀⠀⢁⡤⣴⢤⣄⠀⠀⠀⠀⠘⠋⠉⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣿⡇⠀⠀⠀⠀⠂⢰⣏⢷⡹⡞⠈⡿⣄⠀⠀⠀⠀⠸⢿⡿⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣿⡄⠀⠀⠀⠄⠀⣻⡜⣧⢻⡅⢰⡻⡜⢳⣄⠀⠀⠀⠀⠀⠀⠈⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠈⠉⠙⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⠿⠇⠀⠀⠀⠀⠀⢰⡻⣜⡳⠆⣸⢳⠃⡸⣎⢷⣀⠀⠀⠀⢀⣀⣤⣤⣤⣤⣤⣤⣤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣆⡀⠀⠀⠀⠈⠀⠀⠙⣮⠽⢀⣏⢯⢀⡷⣹⢮⡝⡦⢀⡶⣯⢟⣮⠷⣽⣚⣧⢿⡼⣏⣿⢳⣦⣐⠶⡖⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣿⣿⣷⣆⠀⠀⠀⠂⠀⠈⠣⣰⢏⡎⢠⢟⡵⣫⠞⢀⡾⣽⢞⣻⡞⣟⣳⡟⣾⣭⢷⣻⢞⡿⣼⣛⠆⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣿⣿⣿⣿⣷⠄⠀⠀⠀⠀⠀⠈⠛⣆⡸⣏⢾⡱⠁⣾⣽⢫⣟⣧⢿⡽⣳⣻⣳⣞⢯⡷⢯⣻⡵⠃⠀⠀⠀⠀⠀⢼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣿⣿⣿⣿⣦⣤⣤⡄⠀⠀⠐⠀⠀⠈⠳⣝⣮⡓⢸⣳⣞⣟⣮⡽⡾⡝⢷⣳⢯⣞⣟⡾⢯⣷⡃⠀⠀⠀⠀⢀⡾⡄⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣿⣿⣿⣿⣿⣿⣿⣿⣷⠄⠀⠀⠀⠀⠀⠘⠲⡁⣼⣳⡽⢾⡱⠉⠀⠐⠒⢧⣏⢞⡾⣽⣛⡶⣷⣀⠀⠀⣠⡿⣽⣻⣤⠘⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣿⣿⣿⣿⣿⣿⣿⣿⣿⢀⢦⡆⠀⠀⠀⠀⠀⠀⣷⣫⣽⡛⠀⠀⠀⠀⠀⠺⣿⣆⣻⢧⡿⡽⣞⣽⡻⣟⡷⣻⣵⣳⢯⡶⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣿⣿⣿⣿⣿⣿⣿⣿⡏⢸⢸⠁⠀⠀⢀⠀⠀⠀⢷⣻⡼⣧⠀⠀⠀⠀⠀⠀⣿⡟⣼⣻⣼⣻⢽⡶⣻⡽⣞⡷⣳⢯⡷⣻⢧⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣿⣿⣿⣿⣿⣿⣿⣿⡇⢸⠬⢧⣀⠀⡈⣦⣤⠄⣞⡷⣻⡵⢧⡀⡀⣀⣠⣼⡟⣡⠗⣯⢶⢯⡷⣛⣷⢻⡽⢾⡽⣳⣻⢽⣫⣧⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣿⣿⣿⣿⣿⣿⣿⣿⣿⠐⣎⡷⣯⣽⡁⠾⠽⠂⠹⣽⠳⠃⣸⣟⡶⣯⢿⣶⣛⡷⣌⣸⢯⣟⡾⣽⢞⣯⢟⣯⣽⣳⢯⣯⢗⣯⣇⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⠸⣽⣳⠾⣽⢶⡆⠠⠀⠄⢐⣾⣳⡽⢾⣝⡷⡾⣭⣟⣭⢿⣹⠾⣽⣞⣻⢮⣟⣮⠷⣯⢷⣫⣟⣮⡽⡆⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⠘⣳⠿⣭⢷⢯⣄⠑⢈⣼⣳⡽⣞⣟⣮⠿⣵⣻⢮⣟⡾⣽⣛⡷⣾⣹⢯⣞⣳⠿⣽⣞⣳⡽⣞⡽⣧⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡌⠛⣭⣟⣯⣞⠿⣯⢷⣫⢷⣛⣮⢷⣻⣳⢯⡷⢾⡽⣞⣭⢷⣏⣷⡻⢾⣹⣟⣳⣞⠷⣯⢯⢷⣳⠄⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡈⢷⣺⣭⢿⡽⣾⣹⣏⣿⢺⣽⣳⣭⢷⣻⣏⣷⡻⣞⣯⣞⣳⡟⣯⢷⡞⣷⣫⢿⣭⡟⣯⢷⠀⢼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⣟⡾⣽⡀⢹⣳⢾⡅⣸⢾⡵⣯⠻⣶⣻⣼⢻⣵⣳⢯⣳⢿⣹⢾⡽⣳⢯⣟⣶⣻⡽⣾⠁⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⣿⣿⣿⣧⠘⣭⢷⣻⡉⡿⣞⢡⢯⣟⡾⠡⣽⡳⣧⡟⣯⠞⢓⣋⡭⣼⢯⢷⣻⡽⣳⣞⣧⢷⣻⡵⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠁⣆⠘⣿⡿⠛⣁⡈⢯⢷⡃⢹⡇⢸⣞⡧⠃⡌⢀⠙⣷⠛⣀⡾⡽⣾⣹⢷⣫⣟⡾⣵⣻⢞⣞⡯⣷⠃⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢸⡼⡆⢈⣴⡻⣽⣣⣆⡉⣁⡾⣥⡀⢋⣠⡞⠀⣬⣇⠀⣴⢯⣻⡽⣶⢯⢯⣗⣯⣞⢷⡻⢤⡾⣽⠇⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⡏⣿⢽⣀⣷⡻⢷⡽⢾⡽⣯⣽⢳⣟⣯⢷⣋⠀⡿⣞⣧⠹⣏⡷⣽⡞⣯⠿⣼⣞⡭⢃⣴⢯⣷⠋⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⢿⣹⢾⡽⣞⡽⣯⢟⣯⢷⣻⣼⢻⣞⡾⣽⡃⠀⣿⣽⢺⡽⢯⣽⣳⡛⠭⣟⣓⣬⢶⣻⡭⠟⢀⣤⡉⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
      "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣈⣉⣉⡘⣉⢉⡉⣉⢈⡉⣁⢉⡉⣈⢉⣁⣃⡀⠟⠾⠯⠟⠿⠶⠭⠏⠽⠙⠚⠩⠋⣑⣀⣌⣉⣁⣋⣀⣀⣀⣌⣉⠙⠿⣿⣿⣿⣿⣿⣿⢿⣽",
      "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠛⠙⠉⠃⢠⣼⣿⣿⣿⣿⣿⣼⣿",
      "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣤⣄⣀⣿⣿⣿⣿⣿⣿⣿⣿",
      "",
    }
  elseif index == 5
  then
    return {
      "",
      "⡹⢳⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⡇⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⣿⠊⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠿⣿⠀⢘⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡈⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⣶⣶⠀⠀⠘⠛⠧⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠿⠛⢥⡆⠀⠀⠀⠀⠀⠀⢠⠇⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠁⠀⠢⠿⣿⢀⠀⣿⡆⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣦⡄⠀⠀⠀⠀⠀⠀⣼⠀⣷⠀⠀⠀⠀⠀⠀⠀⠀⣰⠇⢀⣆⣾⣶⣦⠀⢀⡛⠷⠰⠂⠀⠀⠀⠀⠀⠀⠀⠀",
      "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠛⠁⣀⣀⠀⣀⣀⣀⣿⣄⣻⣄⣀⣀⣀⡀⠀⠀⣴⠏⠀⠈⠉⠉⠉⠉⠀⠈⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡆⠀⠀⠂⠀⣀⣤⣤⡆⠀⠀⠀⠀⠀⠀⠐⢶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⣰⣿⣿⣿⡿⠀⠀⢀⡀⠀⠀⠀⢢⣄⡙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠀⣀⣴⡾⠁⠀⠀⠀⢀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⡇⠻⢂⣠⣤⣴⣦⡀⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⢒⣀⣤⣀⣀⠃⠁⠀⣴⣧⠀⠀⠀⠀⠀⠀⠀⠀",
      "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣷⣤⣄⣀⠻⠿⠿⠛⢀⣉⣭⣭⣭⣴⣶⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣭⣥⣬⣍⣙⡛⠛⠀⠀⢀⡿⠟⠀⠀⠀⠀⠀⠀⠀⠀",
      "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣶⣦⣦⣴⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠁⠀⣀⢀⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⠀⠀⣾⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⠀⠀⠀⠀⠀⠀⠀⠀⠄⠀⣀⠀⠹⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⢀⣀⠜⠹⢋⣉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⠀⠀⠀⠀⠀⠀⠀⠀⠐⠀⠸⣷⣤⣀⡙⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⢀⣴⣿⣿⢋⣤⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⠀⠀⠀⠀⠀⠀⠀⡀⠀⡆⠀⢹⣿⣿⣿⣷⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣆⠻⣿⠻⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⢀⣴⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⠀⠀⠀⠀⠀⠀⠀⠸⣦⡀⠂⠀⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣿⣿⣿⣿⣿⣿⣿⣿⠟⢋⣤⣾⣿⣿⣿⣿⣿⣿⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⢐",
      "⠀⠀⠀⠀⠀⠀⠀⠀⠙⠿⣦⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣏⣭⣴⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⠿",
      "⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣴⣶⣦⣤⣍⣛⠻⠿⣿⣿⣿⣿⣿⣟⠙⠿⠛⣛⣛⣩⣥⣤⣤⣄⣢⣁⣛⡛⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠊⠀⠀",
      "⠀⠀⠀⠀⠀⣀⣤⣶⣿⣿⣿⣿⣿⣿⣿⣿⡟⢿⣶⣤⣍⠛⢿⣿⣿⡀⠀⠘⠛⣛⣩⣉⣙⢛⡛⠛⢛⠻⠿⣷⣦⣌⡙⠛⢨⣿⣿⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⠀⠀⠀⣰⣾⣿⣿⣿⣿⣿⣿⡿⠛⠉⠛⣛⠛⠂⠉⠉⣙⣡⣌⣿⣿⣿⡄⠀⣸⣿⣿⣿⣿⣳⣶⡿⣷⡿⣶⣤⣍⡉⠀⢀⣾⣿⣿⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⠀⠀⣰⣿⣿⣿⣿⣿⠯⠉⠁⠀⠀⠀⠀⠘⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡘⢿⣿⡿⣿⣿⣿⣷⡌⢱⢾⣿⠟⢁⣴⣾⣿⣿⣿⣿⣿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⠀⢰⣿⣿⣿⣿⣿⠃⠀⠀⠀⣀⣠⣤⣤⣤⣤⣭⣭⣭⣭⣭⣭⣭⣭⣭⣍⣉⣉⡂⠙⠻⢿⣽⠋⠧⠾⠛⣈⣠⣶⣿⣿⣿⣿⣿⣿⣿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⢀⣿⣿⣿⣿⣿⠃⠀⣠⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠙⠛⢛⣡⡴⢱⣦⢤⣤⣴⡾⠟⣻⣿⣿⣿⣿⣿⣿⣿⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⠸⣿⣿⣿⡿⠋⣠⣾⣿⣿⣿⣿⣿⣿⣿⡿⠿⠿⠿⠿⠛⠛⠋⣭⣭⣤⣶⣾⣿⣿⣷⣤⣙⠻⢍⣀⣶⣿⣿⣿⣿⣿⣿⣿⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⣦⠹⠟⢋⣴⣿⣿⣿⣿⣿⣿⠟⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⠻⣷⡀⣿⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠐⠀⠀⠀⠀⠈⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⠂⠙⣿⣄⠻⣿⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠿⣿⣿⣿⣿⠿⠛⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⣦⡀⠘⢿⣧⡉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠁⠀⠀⠀⢨⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠀⠐⠀⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⣿⣿⣦⡀⠻⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠂⠠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⣿⣿⣿⣷⡄⠙⣿⣆⠒⢶⣶⣤⣶⣶⣶⣶⣾⣿⣿⣿⣿⣿⣷⣶⣶⣶⣦⣤⣤⡄⠀⠀⠀⠀⠀⠀⠠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⣿⣿⣿⣿⣿⣦⡈⢿⣦⡀⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠿⠍⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⢹⣿⣿⣿⣿⣿⡓⠀⢻⣷⡀⠈⣛⡋⠉⢉⣉⣉⣥⣤⣤⣴⣦⣤⣀⠶⠞⠀⠀⠀⠀⠀⠀⠀⢠⡖⠀⠀⠔⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "⢹⣿⣿⣿⣿⣿⢠⣶⡿⢛⡁⢸⣿⣿⣿⣟⣿⣿⡿⠿⠻⠟⠛⠉⠀⠀⠀⠀⢀⠀⠀⠀⣀⣺⡟⠀⠀⣼⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
      "",
    }
  end
end

dashboard.setup({
  theme = "doom",
  config = {
    header = header_generator(1),
    center = {
      {
        icon = " ",
        icon_hl = "Title",
        desc = "New File",
        desc_hl = "String",
        action = "enew"
      },
      {
        icon = " ",
        desc = "File Explorer",
        desc_hl = "String",
        action = "Ex"
      },
      {
        icon = "󰱽 ",
        desc = "Find Files",
        desc_hl = "String",
        action = "Telescope find_files"
      },
      {
        icon = " ",
        desc = "Live Grep",
        desc_hl = "String",
        action = "Telescope live_grep"
      },
      {
        icon = " ",
        desc = "Recently Files",
        desc_hl = "String",
        action = "Telescope oldfiles"
      },
      {
        icon = "󰒓 ",
        desc = "Configuration",
        desc_hl = "String",
        action = "e ~/.config/nvim/lua/res0nance/packer.lua"
      },
      {
        icon = " ",
        desc = "Quit",
        desc_hl = "String",
        action = "q!"
      }
    },
    footer = {}
  }
})
